apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: REPLACE_ME-lua
  namespace: REPLACE_ME
spec:
  # workloadSelector:
  #   labels:
  #     name: front-end
  configPatches:
    - applyTo: HTTP_FILTER
      match:
        context: SIDECAR_INBOUND
        listener:
          portNumber: 8000
          filterChain:
            filter:
              name: "envoy.filters.network.http_connection_manager"
              subFilter:
                name: "envoy.filters.http.router"
      patch:
        operation: INSERT_BEFORE
        value:
         name: envoy.filters.http.lua
         typed_config:
           "@type": "type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua"
           inlineCode: |
             function envoy_on_response(response_handle)
               response_handle:logWarn("Start envoy_on_response Normal")
               local body_obj = response_handle:body()
               local log_suffix = ""
               if body_obj ~= nil then
                 local body_bytes = body_obj:getBytes(0, body_obj:length())
                 local raw_json_text = tostring(body_bytes)
                 local txt = raw_json_text:gsub("\n", "")
                 log_suffix = string.sub(txt, 1, 4000)
               end
               response_handle:headers():add("log-suffix", log_suffix)
             end
