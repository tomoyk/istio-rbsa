---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thumbnail-minio-deploy
  namespace: thumbnail
  labels:
    minio: thumbnail
spec:
  replicas: 1
  selector:
    matchLabels:
      minio: thumbnail
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        minio: thumbnail
    spec:
      containers:
        - name: thumbnail-minio-container
          image: minio/minio:RELEASE.2021-09-03T03-56-13Z
          imagePullPolicy: IfNotPresent
          command: ["minio", "server"]
          args: ["/data", "--console-address", ":9100"]
          ports:
            - name: minio-api
              containerPort: 9000
            - name: minio-dashboard
              containerPort: 9100
          env:
            - name: MINIO_ACCESS_KEY
              value: minio
            - name: MINIO_SECRET_KEY
              value: minio123
          volumeMounts:
            - name: thumbnail-minio-volv
              mountPath: /data
          livenessProbe:
            exec:
              command:
                - ls
                - /data/lost+found
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 4
      volumes:
        - name: thumbnail-minio-volv
          persistentVolumeClaim:
            claimName: thumbnail-minio-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: thumbnail-minio-pvc
  namespace: thumbnail
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: thumbnail-minio
  namespace: thumbnail
spec:
  type: ClusterIP
  selector:
    minio: thumbnail
  ports:
    - protocol: TCP
      port: 9000
      targetPort: 9000
---
apiVersion: v1
kind: Service
metadata:
  name: thumbnail-minio-dashboard
  namespace: thumbnail
spec:
  type: NodePort
  selector:
    minio: thumbnail
  ports:
    - protocol: TCP
      port: 9100
      targetPort: 9100
---
apiVersion: v1
kind: Namespace
metadata:
  name: thumbnail
  labels:
    istio-injection: enabled
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thumbnail-app-deploy
  namespace: thumbnail
  labels:
    app: thumbnail
spec:
  replicas: 1
  selector:
    matchLabels:
      app: thumbnail
  template:
    metadata:
      annotations:
        sidecar.istio.io/status: ""
      labels:
        app: thumbnail
    spec:
      containers:
        - name: thumbnail-app-container
          image: ghcr.io/cdsl-research/thumbnail:master-781332e
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            - name: MINIO_HOST
              value: "thumbnail-minio.thumbnail:9000"
            - name: PAPER_SVC_HOST
              value: "paper-app.paper:4000"
---
apiVersion: v1
kind: Service
metadata:
  name: thumbnail-app
  namespace: thumbnail
spec:
  type: NodePort
  selector:
    app: thumbnail
  ports:
    - protocol: TCP
      port: 4000
      targetPort: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: author-app-deploy
  namespace: author
  labels:
    app: author
spec:
  replicas: 1
  selector:
    matchLabels:
      app: author
  template:
    metadata:
      annotations:
        sidecar.istio.io/status: ""
      labels:
        app: author
    spec:
      containers:
        - name: author-app-container
          image: ghcr.io/cdsl-research/author:master-781332e
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            - name: MONGO_HOST
              value: author-mongo.author
---
apiVersion: v1
kind: Service
metadata:
  name: author-app
  namespace: author
spec:
  type: NodePort
  selector:
    app: author
  ports:
    - protocol: TCP
      port: 4000
      targetPort: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: author-mongo-deploy
  namespace: author
  labels:
    db: author
spec:
  replicas: 1
  selector:
    matchLabels:
      db: author
  template:
    metadata:
      labels:
        db: author
    spec:
      containers:
        - name: author-mongo-container
          image: mongo:5.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: root
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: example
          volumeMounts:
            - name: author-mongo-volv
              mountPath: /data/db
          livenessProbe:
            exec:
              command:
                - ls
                - /data/db/lost+found
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 4
      volumes:
        - name: author-mongo-volv
          persistentVolumeClaim:
            claimName: author-mongo-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: author-mongo-pvc
  namespace: author
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: author-mongo
  namespace: author
spec:
  type: ClusterIP
  selector:
    db: author
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
---
apiVersion: v1
kind: Namespace
metadata:
  name: author
  labels:
    istio-injection: enabled
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paper-app-deploy
  namespace: paper
  labels:
    app: paper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paper
  template:
    metadata:
      annotations:
        sidecar.istio.io/status: ""
      labels:
        app: paper
    spec:
      containers:
        - name: paper-app-container
          image: ghcr.io/cdsl-research/paper:master-781332e
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            - name: MONGO_HOST
              value: paper-mongo
            - name: MINIO_HOST
              value: "paper-minio.paper:9000"
---
apiVersion: v1
kind: Service
metadata:
  name: paper-app
  namespace: paper
spec:
  type: NodePort
  selector:
    app: paper
  ports:
    - protocol: TCP
      port: 4000
      targetPort: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paper-mongo-deploy
  namespace: paper
  labels:
    db: paper
spec:
  replicas: 1
  selector:
    matchLabels:
      db: paper
  template:
    metadata:
      labels:
        db: paper
    spec:
      containers:
        - name: paper-mongo-container
          image: mongo:5.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: root
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: example
          volumeMounts:
            - name: paper-mongo-volv
              mountPath: /data/db
          livenessProbe:
            exec:
              command:
                - ls
                - /data/db/lost+found
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 4
      volumes:
        - name: paper-mongo-volv
          persistentVolumeClaim:
            claimName: paper-mongo-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paper-mongo-pvc
  namespace: paper
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: paper-mongo
  namespace: paper
spec:
  type: ClusterIP
  selector:
    db: paper
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paper-minio-deploy
  namespace: paper
  labels:
    minio: paper
spec:
  replicas: 1
  selector:
    matchLabels:
      minio: paper
  template:
    metadata:
      labels:
        minio: paper
    spec:
      containers:
        - name: paper-minio-container
          image: minio/minio:RELEASE.2021-09-03T03-56-13Z
          imagePullPolicy: IfNotPresent
          command: ["minio", "server"]
          args: ["/data", "--console-address", ":9100"]
          ports:
            - name: minio-api
              containerPort: 9000
            - name: minio-dashboard
              containerPort: 9100
          env:
            - name: MINIO_ACCESS_KEY
              value: minio
            - name: MINIO_SECRET_KEY
              value: minio123
          volumeMounts:
            - name: paper-minio-volv
              mountPath: /data
          livenessProbe:
            exec:
              command:
                - ls
                - /data/lost+found
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 4
      volumes:
        - name: paper-minio-volv
          persistentVolumeClaim:
            claimName: paper-minio-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paper-minio-pvc
  namespace: paper
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: paper-minio
  namespace: paper
spec:
  type: ClusterIP
  selector:
    minio: paper
  ports:
    - protocol: TCP
      port: 9000
      targetPort: 9000
---
apiVersion: v1
kind: Service
metadata:
  name: paper-minio-dashboard
  namespace: paper
spec:
  type: NodePort
  selector:
    minio: paper
  ports:
    - protocol: TCP
      port: 9100
      targetPort: 9100
---
apiVersion: v1
kind: Namespace
metadata:
  name: paper
  labels:
    istio-injection: enabled
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: front-app-deploy
  namespace: front
  labels:
    app: front
spec:
  replicas: 1
  selector:
    matchLabels:
      app: front
  template:
    metadata:
      annotations:
        sidecar.istio.io/status: ""
      labels:
        app: front
    spec:
      containers:
        - name: front-app-container
          image: ghcr.io/cdsl-research/front:master-781332e
          imagePullPolicy: IfNotPresent
          ports:
            - name: health-port
              containerPort: 8000
          env:
            - name: SERVICE_PAPER_HOST
              value: paper-app.paper
            - name: SERVICE_PAPER_PORT
              value: "4000"
            - name: SERVICE_AUTHOR_HOST
              value: author-app.author
            - name: SERVICE_AUTHOR_PORT
              value: "4000"
            - name: SERVICE_THUMBNAIL_HOST
              value: thumbnail-app.thumbnail
            - name: SERVICE_THUMBNAIL_PORT
              value: "4000"
            - name: SERVICE_FULLTEXT_HOST
              value: fulltext-app.fulltext
            - name: SERVICE_FULLTEXT_PORT
              value: "4000"
            - name: SERVICE_STATS_HOST
              value: "stats-app.stats"
            - name: SERVICE_STATS_PORT
              value: "4000"
              # readinessProbe:
              #   httpGet:
              #     path: /
              #     port: health-port
              #   periodSeconds: 5
              #   timeoutSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: front-app
  namespace: front
spec:
  type: NodePort
  selector:
    app: front
  ports:
    - protocol: TCP
      port: 4000
      targetPort: 8000
      nodePort: 30200
---
apiVersion: v1
kind: Namespace
metadata:
  name: front
  labels:
    istio-injection: enabled
---
apiVersion: v1
kind: Namespace
metadata:
  name: stats
  labels:
    istio-injection: enabled
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stats-mongo-deploy
  namespace: stats
  labels:
    db: stats
spec:
  replicas: 1
  selector:
    matchLabels:
      db: stats
  template:
    metadata:
      labels:
        db: stats
    spec:
      containers:
        - name: stats-mongo-container
          image: mongo:5.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: root
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: example
          volumeMounts:
            - name: stats-mongo-volv
              mountPath: /data/db
          livenessProbe:
            exec:
              command:
                - ls
                - /data/db/lost+found
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 4
      volumes:
        - name: stats-mongo-volv
          persistentVolumeClaim:
            claimName: stats-mongo-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: stats-mongo-pvc
  namespace: stats
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: stats-mongo
  namespace: stats
spec:
  type: ClusterIP
  selector:
    db: stats
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stats-app-deploy
  namespace: stats
  labels:
    app: stats
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stats
  template:
    metadata:
      annotations:
        sidecar.istio.io/status: ""
      labels:
        app: stats
    spec:
      containers:
        - name: stats-app-container
          image: ghcr.io/cdsl-research/stats:master-781332e
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            - name: MONGO_HOST
              value: stats-mongo.stats
---
apiVersion: v1
kind: Service
metadata:
  name: stats-app
  namespace: stats
spec:
  type: NodePort
  selector:
    app: stats
  ports:
    - protocol: TCP
      port: 4000
      targetPort: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fulltext-app-deploy
  namespace: fulltext
  labels:
    app: fulltext
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fulltext
  template:
    metadata:
      annotations:
        sidecar.istio.io/status: ""
      labels:
        app: fulltext
    spec:
      containers:
        - name: fulltext-app-container
          image: ghcr.io/cdsl-research/fulltext:master-781332e
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            - name: ELASTICSEARCH_HOST
              value: "fulltext-elastic.fulltext:9200"
            - name: ELASTICSEARCH_INDEX
              value: fulltext
            - name: PAPER_SVC_HOST
              value: "paper-app.paper:4000"
---
apiVersion: v1
kind: Service
metadata:
  name: fulltext-app
  namespace: fulltext
spec:
  type: NodePort
  selector:
    app: fulltext
  ports:
    - protocol: TCP
      port: 4000
      targetPort: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fulltext-elastic-deploy
  namespace: fulltext
  labels:
    db: fulltext
spec:
  replicas: 1
  selector:
    matchLabels:
      db: fulltext
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        db: fulltext
    spec:
      containers:
        - name: fulltext-elastic-container
          image: docker.elastic.co/elasticsearch/elasticsearch:8.1.2
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9200
          env:
            - name: discovery.type
              value: single-node
            - name: xpack.security.enabled
              value: "false"
          volumeMounts:
            - name: fulltext-elastic-volv
              mountPath: /usr/share/kibana/data
      volumes:
        - name: fulltext-elastic-volv
          persistentVolumeClaim:
            claimName: fulltext-elastic-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fulltext-elastic-pvc
  namespace: fulltext
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: fulltext-elastic
  namespace: fulltext
spec:
  type: ClusterIP
  selector:
    db: fulltext
  ports:
    - protocol: TCP
      port: 9200
      targetPort: 9200
---
apiVersion: v1
kind: Namespace
metadata:
  name: fulltext
  labels:
    istio-injection: enabled
