{
  "fulltexts": [
    {
      "paper_uuid": "860a74e4-5ebf-479e-a8ba-8bd56ff09ff3",
      "page_number": 0,
      "text": "テクニカルレポートCDSL Technical Report稼働率でグループ化されたIoTデバイスの相互監視による異常検知システム高橋 建一1,a)串田 高幸1概要：通信技術の発達により IoT を多様に扱う現代において設置した機器が正常に動作しないことや，異常に気付くのが遅れてデータを取得できていないことが問題の背景である．本論文では稼働率によってグループ化されたノード群の相互監視による異常検知システムの提案をする．多数に設置し稼働する IoT から異常が無いかグループ内で相互監視をおこなうこと，また，稼働率によってグルーピングを行うことにより正常な相互監視ができるかどうかの検証が目的である．異常を検知する方法として IoT ノードの応答確認ができる ping コマンドを採用する．また，ping コマンドで送受信されるデータは ICMP と呼ばれるエラー通知や制御メッセージとする．グルーピングされたノード間でお互いに ping コマンドの ICMP 送受信を行い反応が返ってくるかどうかで異常を判断する手法を用いる．実際にプログラムを動かしその結果を本論文で紹介する．1.はじめに1.1背景現代社会において IoT というのは社会基盤や生活基盤に広く浸透している．IoT の活用現場として医療，物流，製造業，農業がある．医療では緊急事態の初期段階において情報収集という点，物流では IoT を利用することにより同時スケジューリングという点，製造業では伝統的な製造システムから最新のデジタル化されたものに移行すると同時に IoT の採用により産業用ビッグデータの形成という点，農業では IoT の導入によりモニタリング，収穫の予想という点で役に立っている [1][2][3][4]．いずれにしても通信技術の発達により IoT の活躍する環境が広くなりつつあることがいえる．1.2課題医療，物流，製造業，農業分野で活躍する IoT だが共通して抱える問題がある．それは，使用している IoT 機器が突然異常や故障を起こすことである．本論文においての異常とは IoT 機器が電源が通っていないまたは，故障によりping コマンドによって送られる ICMP に返答できない状態のことを指す．IoT が異常を起こすことで引き起こされる問題が 2 つある．1 つ目は機能の停止である．IoT が故障するということは機能が停止することである．これはデー1東京工科大学コンピュータサイエンス学部〒 192–0982 東京都八王子市片倉町 1404-1a)C0117183タ収集の役目を果たすことができないということである．2 つ目は機会の損失である．IoT が故障していることで本来収集できたはずのデータが収集できなかったということである．2 つの問題から IoT の異常や故障は IoT を使用者にとっては避けたい問題であると言える．しかし，IoT の異常や故障というのは IoT を使用する上では避けられない問題 [8] であり，抱える課題とも言える．本論文では IoT の課題である異常や故障に対して異常検知というアプローチで解決を図る．既存の検知手法，監視手法について調査し，新規に提案する検知手法との比較や相違点を挙げて優位性があるかどうかの提案を行うものとする．このレポートの 2 章は関連研究と本論文との比較や違いを挙げる．3 章では提案内容についての説明をする．4章では実装方法について説明をする．5 章では本論文での取り組みであらわとなった課題について議論する．6 章では本論文のまとめと次回の展望について記述する．2.関連研究本論文で述べる研究内容は既存研究においてどのような位置づけにあるのか，また，どのような優位性があるのか関連研究を交えてこの章では述べる．既存の IoT の監視に関する研究の一つにトロイの木馬から IoT を保護する相互監査フレームワークという研究がある [5]．これはトロイの木馬と呼ばれる IoT に壊滅的な障害を引き起こすプログラムから防御するために IoT の通信を監視する軽量のフレームワークについて研究したものなっc⃝ 2020 Cloud and Distributed Systems Laboratory1"
    },
    {
      "paper_uuid": "860a74e4-5ebf-479e-a8ba-8bd56ff09ff3",
      "page_number": 0,
      "text": "テクニカルレポートCDSL Technical Report稼働率でグループ化されたIoTデバイスの相互監視による異常検知システム高橋 建一1,a)串田 高幸1概要：通信技術の発達により IoT を多様に扱う現代において設置した機器が正常に動作しないことや，異常に気付くのが遅れてデータを取得できていないことが問題の背景である．本論文では稼働率によってグループ化されたノード群の相互監視による異常検知システムの提案をする．多数に設置し稼働する IoT から異常が無いかグループ内で相互監視をおこなうこと，また，稼働率によってグルーピングを行うことにより正常な相互監視ができるかどうかの検証が目的である．異常を検知する方法として IoT ノードの応答確認ができる ping コマンドを採用する．また，ping コマンドで送受信されるデータは ICMP と呼ばれるエラー通知や制御メッセージとする．グルーピングされたノード間でお互いに ping コマンドの ICMP 送受信を行い反応が返ってくるかどうかで異常を判断する手法を用いる．実際にプログラムを動かしその結果を本論文で紹介する．1.はじめに1.1背景現代社会において IoT というのは社会基盤や生活基盤に広く浸透している．IoT の活用現場として医療，物流，製造業，農業がある．医療では緊急事態の初期段階において情報収集という点，物流では IoT を利用することにより同時スケジューリングという点，製造業では伝統的な製造システムから最新のデジタル化されたものに移行すると同時に IoT の採用により産業用ビッグデータの形成という点，農業では IoT の導入によりモニタリング，収穫の予想という点で役に立っている [1][2][3][4]．いずれにしても通信技術の発達により IoT の活躍する環境が広くなりつつあることがいえる．1.2課題医療，物流，製造業，農業分野で活躍する IoT だが共通して抱える問題がある．それは，使用している IoT 機器が突然異常や故障を起こすことである．本論文においての異常とは IoT 機器が電源が通っていないまたは，故障によりping コマンドによって送られる ICMP に返答できない状態のことを指す．IoT が異常を起こすことで引き起こされる問題が 2 つある．1 つ目は機能の停止である．IoT が故障するということは機能が停止することである．これはデー1東京工科大学コンピュータサイエンス学部〒 192–0982 東京都八王子市片倉町 1404-1a)C0117183タ収集の役目を果たすことができないということである．2 つ目は機会の損失である．IoT が故障していることで本来収集できたはずのデータが収集できなかったということである．2 つの問題から IoT の異常や故障は IoT を使用者にとっては避けたい問題であると言える．しかし，IoT の異常や故障というのは IoT を使用する上では避けられない問題 [8] であり，抱える課題とも言える．本論文では IoT の課題である異常や故障に対して異常検知というアプローチで解決を図る．既存の検知手法，監視手法について調査し，新規に提案する検知手法との比較や相違点を挙げて優位性があるかどうかの提案を行うものとする．このレポートの 2 章は関連研究と本論文との比較や違いを挙げる．3 章では提案内容についての説明をする．4章では実装方法について説明をする．5 章では本論文での取り組みであらわとなった課題について議論する．6 章では本論文のまとめと次回の展望について記述する．2.関連研究本論文で述べる研究内容は既存研究においてどのような位置づけにあるのか，また，どのような優位性があるのか関連研究を交えてこの章では述べる．既存の IoT の監視に関する研究の一つにトロイの木馬から IoT を保護する相互監査フレームワークという研究がある [5]．これはトロイの木馬と呼ばれる IoT に壊滅的な障害を引き起こすプログラムから防御するために IoT の通信を監視する軽量のフレームワークについて研究したものなっc⃝ 2020 Cloud and Distributed Systems Laboratory1"
    },
    {
      "paper_uuid": "ff3af72c-138e-4156-b764-1749000f1cf2",
      "page_number": 0,
      "text": "テクニカルレポートCDSL Technical Report通信障害時に迂回経路でデータ転送をする方式柴智瀚1,a)串田 高幸1概要：サーバとデバイスが通信をしている時に通信障害が発生し, データを引き続き送信するのが難しくなって, データが時々無くなってしまう課題がある. このような問題を解決するために, デバイス付近にあるサーバと繋がっている別のデバイスを探索し, BLE(Bluetooth Low Energy) を用いて一時的に近隣のデバイス経由して継続的にデータを送信する方法を提案する. この提案によって, IoT デバイスが自分自身とサーバへの接続状態を監視し, 通信障害が起こった際に周囲に転送リクエストをブロードキャストする. リクエストを受信したデバイスが相互の BLE 通信状況を評価し, プリセット値を超え, 経由ノードとしての通信時間が最も短いデバイスを介してデータの転送を開始する. BLE 通信状況に対する評価方法は, IoT デバイス間のパケット配信率 (Packet Delivery Ratio:PDR) を評価することである. 提案に対する評価方法は, IoT デバイスが直接サーバへ送信する時間と転送ノードを経由して送信する時間を比較して結論を出す.1.はじめに背景近年では, IoT(Internet of Things) が大きな研究の注目を集めている. 将来のインターネットの一部と見されており, 何十億の知能な「モノ」で構成される規模になると見込まれている [1]. この膨大な数を持っているインターネットを構築する際には無線通信が不可欠な存在だと考えられている. インストールコストを削減できることは, 有線通信に対する無線通信の主な利点の一つである [2]. 徐々に話題になってくる IoT では常に百台, 千台以上のデバイスが設置されている. この場合, 千台のデバイスを有線で繋がると相当な費用がかかると予想される. したがって既存のIoT デバイスは無線通信を使ってデータの送受信をやっているケースが大多数である. IoT は機器の監視手段として多く扱われて, 特定の場所に IoT デバイスを設けていれば,この場所の温度, 湿度をリアルタイムで監視すうことが可能である, サーバで監視したデータを取得して分析を行い,異変と異常を検知することで問題を早めに解決するのが大きな特徴である.既存の無線通信は多種多様であり, Wi-Fi, Zigbee と Blue-tooth がよく使われている. 特に Bluetooth は低消費電力,低コスト, 高可用性と高精度のため室内の超低電力短距離通信 IoT 配置に揺るぎない位置を占めている [3]. Bluetoothは低電力通信要件を満たし, データ伝送のエネルギー効率1東京工科大学コンピュータサイエンス学部〒 192–0982 東京都八王子市片倉町 1404-1a)C0118185の方が Wi-Fi より 30%の増幅が見られており, ほとんどのモバイルデバイスで利用できると言った様々な利点を持っている [4]. 短距離通信と言ったら最初に頭に浮かぶのは必ず Bluetooth といっても過言ではない. しかし, その複雑な検出メカニズムのため, IoT の膨大なデバイス数に向いていない [5]. これらの制限に直面して, BLE は IoT 主導の通信方法として従来の BL に徐々に取って代わった [6]. BLEは, ペアリングを排除し, Bluetooth に固有の複雑な検出を簡素化すると同時に, 短いデータ交換をサポートするように設計されていた [7][8]. 本稿では BLE を用いて, サーバとの通信障害があるデバイスに対する通信を維持させる迂回経路を設計する.課題IoT デバイスとサーバへの通信が電波干渉や金属による通信障害が時々発生する. また移動中のデバイスが通信範囲外に辿り着いて, 従来の Wi-Fi と接続できなくてデータを送信できないジレンマに陥ってしまう. 通信手段によるデータが正確にサーバへ伝送できたかどうかがわからない.できない場合はデータの損失とデータの信頼性が低下してしまう恐れがある. IoT とサーバへの送受信が一旦切れたら, リアルタイムでデータを送ったり, データを分析したりすることも不可能になってしまう. これらの問題を解決するために, 次の課題を直面している. 迂回回路の時にどの経路が最良なのかを検討しなければならない. 図 1 は経路選択問題を示す. このような複数の IoT デバイスが存在する時, ESP32A が ESP32C と ESP32D を経由してもいいが,ESP32B と ESP32C のような 2hop でデータを転送してもc⃝ 2020 Cloud and Distributed Systems Laboratory1"
    },
    {
      "paper_uuid": "ff3af72c-138e-4156-b764-1749000f1cf2",
      "page_number": 0,
      "text": "テクニカルレポートCDSL Technical Report通信障害時に迂回経路でデータ転送をする方式柴智瀚1,a)串田 高幸1概要：サーバとデバイスが通信をしている時に通信障害が発生し, データを引き続き送信するのが難しくなって, データが時々無くなってしまう課題がある. このような問題を解決するために, デバイス付近にあるサーバと繋がっている別のデバイスを探索し, BLE(Bluetooth Low Energy) を用いて一時的に近隣のデバイス経由して継続的にデータを送信する方法を提案する. この提案によって, IoT デバイスが自分自身とサーバへの接続状態を監視し, 通信障害が起こった際に周囲に転送リクエストをブロードキャストする. リクエストを受信したデバイスが相互の BLE 通信状況を評価し, プリセット値を超え, 経由ノードとしての通信時間が最も短いデバイスを介してデータの転送を開始する. BLE 通信状況に対する評価方法は, IoT デバイス間のパケット配信率 (Packet Delivery Ratio:PDR) を評価することである. 提案に対する評価方法は, IoT デバイスが直接サーバへ送信する時間と転送ノードを経由して送信する時間を比較して結論を出す.1.はじめに背景近年では, IoT(Internet of Things) が大きな研究の注目を集めている. 将来のインターネットの一部と見されており, 何十億の知能な「モノ」で構成される規模になると見込まれている [1]. この膨大な数を持っているインターネットを構築する際には無線通信が不可欠な存在だと考えられている. インストールコストを削減できることは, 有線通信に対する無線通信の主な利点の一つである [2]. 徐々に話題になってくる IoT では常に百台, 千台以上のデバイスが設置されている. この場合, 千台のデバイスを有線で繋がると相当な費用がかかると予想される. したがって既存のIoT デバイスは無線通信を使ってデータの送受信をやっているケースが大多数である. IoT は機器の監視手段として多く扱われて, 特定の場所に IoT デバイスを設けていれば,この場所の温度, 湿度をリアルタイムで監視すうことが可能である, サーバで監視したデータを取得して分析を行い,異変と異常を検知することで問題を早めに解決するのが大きな特徴である.既存の無線通信は多種多様であり, Wi-Fi, Zigbee と Blue-tooth がよく使われている. 特に Bluetooth は低消費電力,低コスト, 高可用性と高精度のため室内の超低電力短距離通信 IoT 配置に揺るぎない位置を占めている [3]. Bluetoothは低電力通信要件を満たし, データ伝送のエネルギー効率1東京工科大学コンピュータサイエンス学部〒 192–0982 東京都八王子市片倉町 1404-1a)C0118185の方が Wi-Fi より 30%の増幅が見られており, ほとんどのモバイルデバイスで利用できると言った様々な利点を持っている [4]. 短距離通信と言ったら最初に頭に浮かぶのは必ず Bluetooth といっても過言ではない. しかし, その複雑な検出メカニズムのため, IoT の膨大なデバイス数に向いていない [5]. これらの制限に直面して, BLE は IoT 主導の通信方法として従来の BL に徐々に取って代わった [6]. BLEは, ペアリングを排除し, Bluetooth に固有の複雑な検出を簡素化すると同時に, 短いデータ交換をサポートするように設計されていた [7][8]. 本稿では BLE を用いて, サーバとの通信障害があるデバイスに対する通信を維持させる迂回経路を設計する.課題IoT デバイスとサーバへの通信が電波干渉や金属による通信障害が時々発生する. また移動中のデバイスが通信範囲外に辿り着いて, 従来の Wi-Fi と接続できなくてデータを送信できないジレンマに陥ってしまう. 通信手段によるデータが正確にサーバへ伝送できたかどうかがわからない.できない場合はデータの損失とデータの信頼性が低下してしまう恐れがある. IoT とサーバへの送受信が一旦切れたら, リアルタイムでデータを送ったり, データを分析したりすることも不可能になってしまう. これらの問題を解決するために, 次の課題を直面している. 迂回回路の時にどの経路が最良なのかを検討しなければならない. 図 1 は経路選択問題を示す. このような複数の IoT デバイスが存在する時, ESP32A が ESP32C と ESP32D を経由してもいいが,ESP32B と ESP32C のような 2hop でデータを転送してもc⃝ 2020 Cloud and Distributed Systems Laboratory1"
    },
    {
      "paper_uuid": "860a74e4-5ebf-479e-a8ba-8bd56ff09ff3",
      "page_number": 1,
      "text": "テクニカルレポートCDSL Technical Reportている．本研究と比較すると違いがある．それは，監視方法の違いである．先ほど挙げた研究ではトロイの木馬と呼ばれる外部からの悪意，脅威から防御するための監視である．それとは別に本レポートの研究は外部からの脅威ではなく IoT 本体が ping コマンドによって送られた ICMP を返答できない異常や故障が起きてないかを監視する位置づけである．また，それに付随してネットワークに異常がないかの監視も含まれる．その為，外部のネットワークを監視するのではなく，ICMP を用いて IoT を監視するという点では優位性があるといえる．グルーピングに関する既存の研究の一つに IoT ネットワークを効率的に高速にする研究がある [6]．この研究はIoT の数が増え続けることによる遅延とパケット衝突率の増加の問題に対して，IEEE 802.11ah ベースの IoT ネットワークでチャネルを高速かつ効率的にアクセスするためのデバイスグループ化スキームの研究である．しかし，グルーピングで効率的に高速化においては稼働率は触れられていない．効率的という観点において稼働率のグルーピングについて本研究では取り組む．相互監視に関する既存の研究の一つに動的相互情報類似性分析を用いた研究がある [7]．この研究は相互情報ベースの類似性を用いてシステムステータスの転送先として考えられる遷移を識別する研究である．本研究との違いとしては監視方法である．本論文の相互監視の方法は ping コマンドを用いた ICMP の送受信の応答反応により監視を行う．対して，動的相互類似性分析を用いた研究では統計が対応する条件を満たさない場合に故障と判断される．本研究と比較して相互監視の手法に違いがある．それは，pingコマンドによる ICMP の送受信による応答があるかないかどうかと統計を用いた条件の設定の違いである．このことから，ping コマンドを用いた手法では複雑な構造が無くICMP による応答判断のみのためシステムにかかる負荷が少ないという点で優位性があると言える．3.提案図 12 台の場合の構成図本論文で提案するのは稼働率によってグルーピングされた IoT 機器の相互監視である．ここでいう稼働率とは，設置した IoT ノードが算出した個々の稼働率である．また，ここでいうグルーピングの定義とは，個々に分かれているIoT ノードが 2 台によるペアリングまたは，3 台以上によるグルーピングのことを指す．設置した IoT 機器には故障の可能性，不具合の可能性が潜んでいる．いつ壊れるかわからない IoT 機器に対しては不具合を検知するシステムが必要である．提案内容としては IoT の個々の稼働率を調べグルーピングを行う．稼働率でグルーピングを行う理由としては，稼働率の高い機器と低い機器を組み合わせることで総合的に見てそのグループをより長く稼働させるためである．グルーピングを終えた後はグループ内の機器同士で相互監視を行う．この際にリーダーノードはグループ内で一番稼働率が高いものとする．相互監視では ICMP をお互いに送受信し，生存確認を行う．ここでいう生存確認とはリーダーノードが他ノードに ping コマンドで ICMP を送信し，その反応が返ってくることである．一通りの生存確認を終えたらリーダーノードがグループに繋がっているサーバに報告を行う図の 1 には 2 台ずつペアリングした場合の構成図を，図の 2 には 3 台ずつグルーピングした場合の構成図を示す．図の 1 は 2 台ずつペアリングした場合の構成図である．上位サーバとはグループ 1 とグループ 2 からの報告を受けるサーバであり，収集した稼働率のデータからランキング化しグルーピングを行う．管理者 PC とはこのシステムの使用者であり，上位サーバからデータをもらい受けることで全体の把握ができる．グループ 1 内にはノード 1 とノード 2 が所属しており，ノード 1 とノード 2 はお互いに pingコマンドを用いて ICMP を送りあい応答確認を行っている．同様にグループ 2 内のノード 3 とノード 4 も ICMP を送りあい応答確認を行っている．上位サーバへの報告役としてグループ 1 からはノード 1 がリーダーとして上位サーバに報告を行っている．同様にグループ 2 からはノード 3がリーダーとして上位サーバに報告を行っている．図 22 台の場合の構成図c⃝ 2020 Cloud and Distributed Systems Laboratory2"
    },
    {
      "paper_uuid": "860a74e4-5ebf-479e-a8ba-8bd56ff09ff3",
      "page_number": 1,
      "text": "テクニカルレポートCDSL Technical Reportている．本研究と比較すると違いがある．それは，監視方法の違いである．先ほど挙げた研究ではトロイの木馬と呼ばれる外部からの悪意，脅威から防御するための監視である．それとは別に本レポートの研究は外部からの脅威ではなく IoT 本体が ping コマンドによって送られた ICMP を返答できない異常や故障が起きてないかを監視する位置づけである．また，それに付随してネットワークに異常がないかの監視も含まれる．その為，外部のネットワークを監視するのではなく，ICMP を用いて IoT を監視するという点では優位性があるといえる．グルーピングに関する既存の研究の一つに IoT ネットワークを効率的に高速にする研究がある [6]．この研究はIoT の数が増え続けることによる遅延とパケット衝突率の増加の問題に対して，IEEE 802.11ah ベースの IoT ネットワークでチャネルを高速かつ効率的にアクセスするためのデバイスグループ化スキームの研究である．しかし，グルーピングで効率的に高速化においては稼働率は触れられていない．効率的という観点において稼働率のグルーピングについて本研究では取り組む．相互監視に関する既存の研究の一つに動的相互情報類似性分析を用いた研究がある [7]．この研究は相互情報ベースの類似性を用いてシステムステータスの転送先として考えられる遷移を識別する研究である．本研究との違いとしては監視方法である．本論文の相互監視の方法は ping コマンドを用いた ICMP の送受信の応答反応により監視を行う．対して，動的相互類似性分析を用いた研究では統計が対応する条件を満たさない場合に故障と判断される．本研究と比較して相互監視の手法に違いがある．それは，pingコマンドによる ICMP の送受信による応答があるかないかどうかと統計を用いた条件の設定の違いである．このことから，ping コマンドを用いた手法では複雑な構造が無くICMP による応答判断のみのためシステムにかかる負荷が少ないという点で優位性があると言える．3.提案図 12 台の場合の構成図本論文で提案するのは稼働率によってグルーピングされた IoT 機器の相互監視である．ここでいう稼働率とは，設置した IoT ノードが算出した個々の稼働率である．また，ここでいうグルーピングの定義とは，個々に分かれているIoT ノードが 2 台によるペアリングまたは，3 台以上によるグルーピングのことを指す．設置した IoT 機器には故障の可能性，不具合の可能性が潜んでいる．いつ壊れるかわからない IoT 機器に対しては不具合を検知するシステムが必要である．提案内容としては IoT の個々の稼働率を調べグルーピングを行う．稼働率でグルーピングを行う理由としては，稼働率の高い機器と低い機器を組み合わせることで総合的に見てそのグループをより長く稼働させるためである．グルーピングを終えた後はグループ内の機器同士で相互監視を行う．この際にリーダーノードはグループ内で一番稼働率が高いものとする．相互監視では ICMP をお互いに送受信し，生存確認を行う．ここでいう生存確認とはリーダーノードが他ノードに ping コマンドで ICMP を送信し，その反応が返ってくることである．一通りの生存確認を終えたらリーダーノードがグループに繋がっているサーバに報告を行う図の 1 には 2 台ずつペアリングした場合の構成図を，図の 2 には 3 台ずつグルーピングした場合の構成図を示す．図の 1 は 2 台ずつペアリングした場合の構成図である．上位サーバとはグループ 1 とグループ 2 からの報告を受けるサーバであり，収集した稼働率のデータからランキング化しグルーピングを行う．管理者 PC とはこのシステムの使用者であり，上位サーバからデータをもらい受けることで全体の把握ができる．グループ 1 内にはノード 1 とノード 2 が所属しており，ノード 1 とノード 2 はお互いに pingコマンドを用いて ICMP を送りあい応答確認を行っている．同様にグループ 2 内のノード 3 とノード 4 も ICMP を送りあい応答確認を行っている．上位サーバへの報告役としてグループ 1 からはノード 1 がリーダーとして上位サーバに報告を行っている．同様にグループ 2 からはノード 3がリーダーとして上位サーバに報告を行っている．図 22 台の場合の構成図c⃝ 2020 Cloud and Distributed Systems Laboratory2"
    },
    {
      "paper_uuid": "860a74e4-5ebf-479e-a8ba-8bd56ff09ff3",
      "page_number": 4,
      "text": "テクニカルレポートCDSL Technical Reportシェルスクリプトを用いる理由としては今回の ping の送受信を行う手法として ubuntu で利用することが可能である ping コマンドを用いるからである．また，ping コマンド自体を自動的に数回送る方法としてシェルスクリプトが代表的だったことから今回は用いている．4.3評価図の 7 にプログラムの実行結果を示す．本レポートでの議論では今回作った ICMP 送受信プログラムについて評価を行う．今回の評価は相互監視に使うプログラムとしては必要十分の効果があると考えられる．図の 4 からわかるように ping コマンドを用いて ICMP を対象の IP アドレスに送った際に ubntu がインターネットに繋がっている状態とインターネットを切った状態でプログラムを実行し，ICMP を送った．ネットワークにつないだ状態で送った結果，「succes」と表示された．また，ネットワークを切った状態でプログラムを実行した結果「failure」と表示された．この結果から，ping を利用した生存確認能力はあると判断できる．図 7プログラムの実行結果今後の展望としては相互監視の要であるノード同士がお互いに ICMP を送るという環境を目指す．相互監視に必要なものは，複数のノード同士がお互いに監視しあうことである．そのためには，本レポートで紹介した ICMP 送受信プログラムが必要である．それに付随して何回 ping コマンドを起動するか，また，どのように複数のノードの IPアドレスを識別するのか今後の課題である．　5.議論本研究で取り組むべき議論は 2 つある．1 つ目は一度決めたグルーピングの再グルーピングである．一度目に計測した稼働率によるグルーピングが永遠に変化せずに稼働率が一定であり続けることは不可能である．稼働率の変化に合わせて期間を定めて提案で述べた方法で再びグルーピングをする必要性が本研究で判明した．　 2 つ目は相互監視についてである．本論文での提案では ping コマンドを用いた ICMP エコー要求とエコー応答のやり取りによって異常が無いか確認を行っている．もし仮に IoT ノード自体には何も異常が無く正常に稼働しているのにもかかわらずICMP の要求が通らない場合にどのように判断するかが議論によって問題として浮き上がった．ネットワークがダウンしたことにより通信が通らず ICMP が通らないというケースもあるためこの問題に対してどのようにアプローチをかけるのか重要である．6.おわりに今回の提案内容は稼働率によってグルーピングされたIoT デバイスの相互監視の提案である．本レポートで取り扱った内容としては ping 送受信プログラムの作成である．作成したプログラムを実際に動かした評価としては相互監視に必要な生存確認を行うことができると確認できた．今後の取り組みとしてはグループ内のノード同士で ping コマンドを用いて ICMP を送り検証を行うことである．また，グループ内のノードの IP アドレスを識別するという課題が今後の取り組みとしてある．参考文献[1]Ali, H.S., Arun, K.S., Sandeep, P., et al.:Green media-aware medical IoT system,Springer Science+BusinessMedia, LLC, part of Springer Nature (2018)[2]Yingfeng,Z.,Zhengang,G.,Jingxiang,L.,Ying,L.:A Framework for Smart Production-Logistics SystemsBased on CPS and Industrial IoT, Proc. IEEE Transac-tions on Industrial Informatics(2018)[3]D, Mourtzis., E, Vlachou., N, Milas.:Industrial Big Dataas a Result of IoT Adoption in Manufacturing, Labora-tory for Manufacturing Systems and Automation (LMS),University of Patras, Rion Patras 26500, Greece(2016)[4]Meonghun, L., Jeonghwan, H., Hyun, Y.: AgriculturalProduction System Based on IoT, Proc. IEEE 16th In-ternational Conference on Computational Science andEngineering(2013)[5]Chen, L., Patrick, C., Chengmo, Y.:A mutual audit-ing framework to protect IoT against hardware Tro-jans,Proc. 21st Asia and South Paciﬁc Design Automa-tion Conference (ASP-DAC)(2016)[6]Sabin, B., Shree, K.S., Xianbin, W.:Device Group-ing for Fast and Eﬃcient Channel Access in IEEE802.11ah Based IoT Networks, Proc. IEEE InternationalConference on Communications Workshops (ICC Work-shops)(2018)[7]Yuchen, H., Zhiqiang, G., Zhihuan, S.:Adaptive moni-toring for transition process using dynamic mutual in-formation similarity analysis, Proc. Chinese Control andDecision Conference (CCDC)(2016)[8]Boris, O., Felipe, N.:Robust Gossiping for DistributedAverage Consensus in IoT Environments, Proc. IEEEAccess (Volume:7)(2018)c⃝ 2020 Cloud and Distributed Systems Laboratory5"
    },
    {
      "paper_uuid": "860a74e4-5ebf-479e-a8ba-8bd56ff09ff3",
      "page_number": 4,
      "text": "テクニカルレポートCDSL Technical Reportシェルスクリプトを用いる理由としては今回の ping の送受信を行う手法として ubuntu で利用することが可能である ping コマンドを用いるからである．また，ping コマンド自体を自動的に数回送る方法としてシェルスクリプトが代表的だったことから今回は用いている．4.3評価図の 7 にプログラムの実行結果を示す．本レポートでの議論では今回作った ICMP 送受信プログラムについて評価を行う．今回の評価は相互監視に使うプログラムとしては必要十分の効果があると考えられる．図の 4 からわかるように ping コマンドを用いて ICMP を対象の IP アドレスに送った際に ubntu がインターネットに繋がっている状態とインターネットを切った状態でプログラムを実行し，ICMP を送った．ネットワークにつないだ状態で送った結果，「succes」と表示された．また，ネットワークを切った状態でプログラムを実行した結果「failure」と表示された．この結果から，ping を利用した生存確認能力はあると判断できる．図 7プログラムの実行結果今後の展望としては相互監視の要であるノード同士がお互いに ICMP を送るという環境を目指す．相互監視に必要なものは，複数のノード同士がお互いに監視しあうことである．そのためには，本レポートで紹介した ICMP 送受信プログラムが必要である．それに付随して何回 ping コマンドを起動するか，また，どのように複数のノードの IPアドレスを識別するのか今後の課題である．　5.議論本研究で取り組むべき議論は 2 つある．1 つ目は一度決めたグルーピングの再グルーピングである．一度目に計測した稼働率によるグルーピングが永遠に変化せずに稼働率が一定であり続けることは不可能である．稼働率の変化に合わせて期間を定めて提案で述べた方法で再びグルーピングをする必要性が本研究で判明した．　 2 つ目は相互監視についてである．本論文での提案では ping コマンドを用いた ICMP エコー要求とエコー応答のやり取りによって異常が無いか確認を行っている．もし仮に IoT ノード自体には何も異常が無く正常に稼働しているのにもかかわらずICMP の要求が通らない場合にどのように判断するかが議論によって問題として浮き上がった．ネットワークがダウンしたことにより通信が通らず ICMP が通らないというケースもあるためこの問題に対してどのようにアプローチをかけるのか重要である．6.おわりに今回の提案内容は稼働率によってグルーピングされたIoT デバイスの相互監視の提案である．本レポートで取り扱った内容としては ping 送受信プログラムの作成である．作成したプログラムを実際に動かした評価としては相互監視に必要な生存確認を行うことができると確認できた．今後の取り組みとしてはグループ内のノード同士で ping コマンドを用いて ICMP を送り検証を行うことである．また，グループ内のノードの IP アドレスを識別するという課題が今後の取り組みとしてある．参考文献[1]Ali, H.S., Arun, K.S., Sandeep, P., et al.:Green media-aware medical IoT system,Springer Science+BusinessMedia, LLC, part of Springer Nature (2018)[2]Yingfeng,Z.,Zhengang,G.,Jingxiang,L.,Ying,L.:A Framework for Smart Production-Logistics SystemsBased on CPS and Industrial IoT, Proc. IEEE Transac-tions on Industrial Informatics(2018)[3]D, Mourtzis., E, Vlachou., N, Milas.:Industrial Big Dataas a Result of IoT Adoption in Manufacturing, Labora-tory for Manufacturing Systems and Automation (LMS),University of Patras, Rion Patras 26500, Greece(2016)[4]Meonghun, L., Jeonghwan, H., Hyun, Y.: AgriculturalProduction System Based on IoT, Proc. IEEE 16th In-ternational Conference on Computational Science andEngineering(2013)[5]Chen, L., Patrick, C., Chengmo, Y.:A mutual audit-ing framework to protect IoT against hardware Tro-jans,Proc. 21st Asia and South Paciﬁc Design Automa-tion Conference (ASP-DAC)(2016)[6]Sabin, B., Shree, K.S., Xianbin, W.:Device Group-ing for Fast and Eﬃcient Channel Access in IEEE802.11ah Based IoT Networks, Proc. IEEE InternationalConference on Communications Workshops (ICC Work-shops)(2018)[7]Yuchen, H., Zhiqiang, G., Zhihuan, S.:Adaptive moni-toring for transition process using dynamic mutual in-formation similarity analysis, Proc. Chinese Control andDecision Conference (CCDC)(2016)[8]Boris, O., Felipe, N.:Robust Gossiping for DistributedAverage Consensus in IoT Environments, Proc. IEEEAccess (Volume:7)(2018)c⃝ 2020 Cloud and Distributed Systems Laboratory5"
    },
    {
      "paper_uuid": "ff3af72c-138e-4156-b764-1749000f1cf2",
      "page_number": 6,
      "text": "テクニカルレポートCDSL Technical ReportMulti-Hop Routing for Wireless Networks SIGCOMM ’05: Proceedings of the 2005 conference on Applications,technologies, architectures, and protocols for computercommunications, (2005).[11]Syed Raﬁul Hussain, Member, IEEE, Shagufta Mehnaz,Member, IEEE, Shahriar Nirjon, Member, IEEE, andElisa Bertino, Fellow, IEEE: Secure Seamless BluetoothLow Energy Connection Migration for Unmodiﬁed IoTDevices IEEE Transactions on Mobile Computing, 24,pages278–290(2017).[12]Paul Loh Ruen Chze, Kan Siew Leong Communicationsand Networks Group, School of Engineering NanyangPolytechnic Singapore:A Secure Multi-Hop Routingfor IoT Communication 2014 IEEE World Forum onInternet of Things (WF-IoT), DOI 10.1109 / WF-IoT.2014.6803204(2014).[13]T. Clausen and P. Jacquet: RFC3626: Optimized LinkState Routing Protocol (OLSR) RFC Editor UnitedStates, (2003).[14]Bharath Sudharsan, John G. Breslin and MuhammadIntizar Ali: Adaptive Strategy to Improve the Qualityof Communication for IoT Edge Devices 2020 IEEE 6thWorld Forum on Internet of Things (WF-IoT), DOI10.1109/WF-IoT48130.2020.9221276(2020).[15]Raul Rondon, Mikael Gidlund and Krister Landernas:Evaluating Bluetooth Low Energy Suitability for Time-Critical Industrial IoT Applications International Jour-nal of Wireless Information Networks volume, DOI10.1109/TMC.2017.2739742(2018).[16]Agus Kurniawan:Internet of Things Projects withESP32, (2019).c⃝ 2020 Cloud and Distributed Systems Laboratory7"
    },
    {
      "paper_uuid": "ff3af72c-138e-4156-b764-1749000f1cf2",
      "page_number": 6,
      "text": "テクニカルレポートCDSL Technical ReportMulti-Hop Routing for Wireless Networks SIGCOMM ’05: Proceedings of the 2005 conference on Applications,technologies, architectures, and protocols for computercommunications, (2005).[11]Syed Raﬁul Hussain, Member, IEEE, Shagufta Mehnaz,Member, IEEE, Shahriar Nirjon, Member, IEEE, andElisa Bertino, Fellow, IEEE: Secure Seamless BluetoothLow Energy Connection Migration for Unmodiﬁed IoTDevices IEEE Transactions on Mobile Computing, 24,pages278–290(2017).[12]Paul Loh Ruen Chze, Kan Siew Leong Communicationsand Networks Group, School of Engineering NanyangPolytechnic Singapore:A Secure Multi-Hop Routingfor IoT Communication 2014 IEEE World Forum onInternet of Things (WF-IoT), DOI 10.1109 / WF-IoT.2014.6803204(2014).[13]T. Clausen and P. Jacquet: RFC3626: Optimized LinkState Routing Protocol (OLSR) RFC Editor UnitedStates, (2003).[14]Bharath Sudharsan, John G. Breslin and MuhammadIntizar Ali: Adaptive Strategy to Improve the Qualityof Communication for IoT Edge Devices 2020 IEEE 6thWorld Forum on Internet of Things (WF-IoT), DOI10.1109/WF-IoT48130.2020.9221276(2020).[15]Raul Rondon, Mikael Gidlund and Krister Landernas:Evaluating Bluetooth Low Energy Suitability for Time-Critical Industrial IoT Applications International Jour-nal of Wireless Information Networks volume, DOI10.1109/TMC.2017.2739742(2018).[16]Agus Kurniawan:Internet of Things Projects withESP32, (2019).c⃝ 2020 Cloud and Distributed Systems Laboratory7"
    }
  ]
}