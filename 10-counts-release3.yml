apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: counts-release3
  namespace: sock-shop
spec:
  # workloadSelector:
  #   labels:
  #     name: front-end
  configPatches:
    - applyTo: HTTP_FILTER
      match:
        context: SIDECAR_INBOUND
        listener:
          portNumber: 8079
          filterChain:
            filter:
              name: "envoy.filters.network.http_connection_manager"
              subFilter:
                name: "envoy.filters.http.router"
      patch:
        operation: INSERT_BEFORE
        value:
         name: envoy.filters.http.lua
         typed_config:
           "@type": "type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua"
           inlineCode: |
             JSON = (loadfile "/var/lib/lua/JSON.lua")()
             aggre = {}
             function element_counts(request_handle, request_body, depth)
               local counter = 0
               for k,v in pairs(request_body) do
                 if type(v) == "table" then
                   counter = counter + 1
                   element_counts(request_handle, v, depth+1)
                 else
                   counter = counter + 1
                 end
               end
               if aggre[depth] == nil then
                 aggre[depth] = counter
               else
                 aggre[depth] = counter + aggre[depth]
               end
             end
             function envoy_on_request(request_handle)
               local body_obj = request_handle:body()
               local log_suffix = ""
               if body_obj ~= nil then
                 local body_bytes = body_obj:getBytes(0, body_obj:length())
                 request_handle:logCritical("Body:"..body_bytes)
                 local raw_json_text = tostring(body_bytes)
                 local body_json = JSON:decode(raw_json_text)
                 element_counts(request_handle, body_json, 1)
                 log_suffix = table.concat(aggre, ", ")
                 request_handle:logCritical(log_suffix)
                 aggre = {}
               end
               request_handle:headers():add("log-suffix", log_suffix)
             end
